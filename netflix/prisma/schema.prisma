generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId // @id marks the field as the primary key
  name     String
  image    String?
  email    String? @unique
  emailVerified DateTime?
  hashedPassword String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] @db.ObjectId
  sessions Session[]
  accounts Account[] 
}

model Account {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @db.ObjectId
  type    String
  provider String
  providerAccountId String
  refreshToken String? @db.String //future-proofing
  accessToken String? @db.String
  accessTokenExpires Int? //because it's a timestamp
  id_token String? @db.String
  token_type String? 
  sessionState String? @db.String
  scope String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider,providerAccountId])
}

model Session {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expiresAt DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 
}

model VerificationToken {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime
}
model Movie{
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  thumbnail String
  videoUrl String
  genre String
  duration String
}